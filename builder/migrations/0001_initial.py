# Generated by Django 4.2.3 on 2023-09-16 19:33

import admin.utils
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('scheme', models.ImageField(null=True, upload_to=admin.utils.get_timestamp_path)),
                ('square', models.PositiveSmallIntegerField(default=25, validators=[django.core.validators.MinValueValidator(25)])),
                ('price', models.PositiveIntegerField(default=10000, validators=[django.core.validators.MinValueValidator(10000)])),
                ('is_booked', models.BooleanField(default=False)),
                ('is_moderated', models.BooleanField(null=True)),
                ('moderation_status', models.CharField(choices=[('bad_price', 'Некорректная цена'), ('bad_photo', 'Некорректное фото'), ('bad_description', 'Некорректное описание')], max_length=30, null=True)),
                ('price_per_m2', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'apartment',
            },
        ),
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playground', models.BooleanField(default=False)),
                ('school', models.BooleanField(default=False)),
                ('tennis_court', models.BooleanField(default=False)),
                ('shopping_mall', models.BooleanField(default=False)),
                ('subway', models.BooleanField(default=False)),
                ('park', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'benefit',
            },
        ),
        migrations.CreateModel(
            name='Complex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='не указано', max_length=150)),
                ('description', models.TextField(default='не указано')),
                ('address', models.TextField(default='не указано')),
                ('map_lat', models.DecimalField(decimal_places=16, max_digits=19, null=True)),
                ('map_lon', models.DecimalField(decimal_places=16, max_digits=19, null=True)),
                ('main_photo', models.ImageField(null=True, upload_to=admin.utils.get_timestamp_path)),
                ('min_price', models.PositiveIntegerField(default=0)),
                ('price_per_square', models.PositiveIntegerField(default=0)),
                ('min_squares', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('Квартиры', 'Квартиры'), ('Офисы', 'Офисы'), ('Торговые помещения', 'Торговые помещения')], default='Квартиры', max_length=100)),
                ('level', models.CharField(choices=[('Элитный', 'Элитный'), ('Средний', 'Средний'), ('Стандарт', 'Стандарт')], default='Стандарт', max_length=100)),
                ('type', models.CharField(choices=[('Многоквартирный', 'Многоквартирный'), ('Клубный', 'Клубный(Малоквартирный)')], default='Многоквартирный', max_length=100)),
                ('material_type', models.CharField(choices=[('Монолитный каркас с керамзитно-блочным заполнением', 'Monolith'), ('Каркасно-панельное', 'Каркасно-панельное строительство'), ('Монолитно-панельное', 'Монолитно-панельное')], default='Монолитно-панельное', max_length=100)),
                ('perimeter_status', models.CharField(choices=[('Закрытая охраняемая', 'Закрытая охраняемая'), ('Закрытая', 'Закрытая'), ('Открытая', 'Открытая')], default='Закрытая', max_length=100)),
                ('sea_destination_m', models.PositiveIntegerField(default=0)),
                ('ceiling_height_m', models.PositiveIntegerField(default=0)),
                ('gas', models.BooleanField(default=False)),
                ('heating', models.CharField(choices=[('Центральное', 'Центральное'), ('Автономное', 'Автономное'), ('Альтернативное', 'Альтернативное')], default='Центральное', max_length=100)),
                ('electricity', models.BooleanField(default=False)),
                ('water_supply', models.CharField(choices=[('Центральное', 'Центральное'), ('Альтернативное', 'Альтернативное')], default='Центральное', max_length=100)),
                ('sewerage', models.CharField(choices=[('Центральная', 'Центральная'), ('Альтернативная', 'Альтернативная')], default='Центральная', max_length=100)),
                ('registration_type', models.CharField(default='не указано', max_length=100)),
                ('payment_type', models.CharField(choices=[('Ипотека', 'Ипотека'), ('Мат.капитал', 'Мат.капитал'), ('Другое', 'Другое')], default='Мат.капитал', max_length=200)),
                ('payment_target', models.CharField(default='не указано', max_length=100)),
                ('price_in_contract', models.CharField(default='не указано', max_length=100)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'complex',
            },
        ),
        migrations.CreateModel(
            name='Corp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('complex', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corps', to='builder.complex')),
            ],
            options={
                'db_table': 'corp',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('corp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='builder.corp')),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='Sewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10)),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sewers', to='builder.section')),
            ],
            options={
                'db_table': 'sewer',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField()),
                ('description', models.TextField()),
                ('date_published', models.DateField(auto_now_add=True)),
                ('complex', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news', to='builder.complex')),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='GalleryComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=admin.utils.get_timestamp_path)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='builder.complex')),
            ],
            options={
                'db_table': 'gallery_complex',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='builder.section')),
            ],
            options={
                'db_table': 'floor',
            },
        ),
        migrations.CreateModel(
            name='DocKitComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='complexes/doc-kit/')),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='builder.complex')),
            ],
            options={
                'db_table': 'dockit_complex',
            },
        ),
    ]
