# Generated by Django 4.2.3 on 2023-09-12 22:56

import admin.utils
import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('map_lat', models.DecimalField(decimal_places=16, max_digits=19, null=True)),
                ('map_lon', models.DecimalField(decimal_places=16, max_digits=19, null=True)),
                ('description', models.TextField()),
                ('main_photo', models.ImageField(null=True, upload_to=admin.utils.get_timestamp_path)),
                ('is_actual', models.BooleanField(default=True)),
                ('is_moderated', models.BooleanField(null=True)),
                ('moderation_status', models.CharField(blank=True, choices=[('price', 'Некорректная цена'), ('photo', 'Некорректное фото'), ('description', 'Некорректное описание')], max_length=20, null=True)),
                ('grounds_doc', models.CharField(choices=[('Собственность', 'Собственность'), ('Свидетельство о праве на наследство', 'Свидетельство о праве на наследство')], max_length=100)),
                ('appointment', models.CharField(choices=[('Дом', 'Дом'), ('Квартира', 'Квартира'), ('Коммерческие помещения', 'Коммерческие помещения'), ('Офисное помещение', 'Офисное помещение')], max_length=100)),
                ('room_count', models.CharField(choices=[('1', '1 комнатная'), ('2', '2 комнатная'), ('3', '3 комнатная'), ('4', '4 комнатная'), ('5', '5 комнатная'), ('6', '6 комнатная'), ('7', '7 комнатная')], max_length=100)),
                ('layout', models.CharField(choices=[('Студия, санузел', 'Студия, санузел'), ('Классическая', 'Классическая'), ('Европланировка', 'Европланировка'), ('Свободная', 'Свободная')], max_length=100)),
                ('living_condition', models.CharField(choices=[('Черновая', 'Черновая'), ('Ремонт от застройщика', 'Ремонт от застройщика'), ('В жилом состоянии', 'В жилом состоянии')], max_length=100)),
                ('kitchen_square', models.PositiveIntegerField()),
                ('balcony_or_loggia', models.BooleanField()),
                ('heating_type', models.CharField(choices=[('Центральное', 'Центральное'), ('Автономное', 'Автономное'), ('Альтернативное', 'Альтернативное')], max_length=100)),
                ('payment_type', models.CharField(choices=[('', ''), ('Ипотека', 'Ипотека'), ('Мат.капитал', 'Мат.капитал'), ('Другое', 'Другое')], max_length=100)),
                ('agent_commission', models.PositiveIntegerField(choices=[(5000, '5 000 ₴'), (15000, '15 000 ₴'), (30000, '30 000 ₴')])),
                ('communication_type', models.CharField(choices=[('Звонок + сообщение', 'Звонок + сообщение'), ('Звонок', 'Звонок'), ('Сообщение', 'Сообщение')])),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('watched_count', models.PositiveIntegerField(default=0)),
                ('square', models.PositiveSmallIntegerField(default=100, validators=[django.core.validators.MinValueValidator(100)])),
                ('price', models.PositiveIntegerField(default=10000, validators=[django.core.validators.MinValueValidator(10000)])),
                ('price_per_m2', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'announcement',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'chat',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('file', models.FileField(null=True, upload_to=admin.utils.get_timestamp_path)),
                ('date_published', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('complaint_reason', models.CharField(choices=[('', ''), ('Мошенничество', 'Мошенничество'), ('Некорректное фото', 'Некорректное фото'), ('Некорректное описание', 'Некорректное описание')], default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(null=True)),
                ('layout', models.CharField(choices=[('Студия, санузел', 'Студия, санузел'), ('Классическая', 'Классическая'), ('Европланировка', 'Европланировка'), ('Свободная', 'Свободная')], default='', max_length=100)),
                ('grounds_doc', models.CharField(choices=[('Собственность', 'Собственность'), ('Свидетельство о праве на наследство', 'Свидетельство о праве на наследство')], default='', max_length=100)),
                ('room_count', models.CharField(choices=[('1', '1 комнатная'), ('2', '2 комнатная'), ('3', '3 комнатная'), ('4', '4 комнатная'), ('5', '5 комнатная'), ('6', '6 комнатная'), ('7', '7 комнатная')], default='', max_length=100)),
                ('min_price', models.PositiveIntegerField(null=True)),
                ('max_price', models.PositiveIntegerField(null=True)),
                ('min_square', models.PositiveIntegerField(null=True)),
                ('max_square', models.PositiveIntegerField(null=True)),
                ('appointment', models.CharField(choices=[('Дом', 'Дом'), ('Квартира', 'Квартира'), ('Коммерческие помещения', 'Коммерческие помещения'), ('Офисное помещение', 'Офисное помещение')], default='', max_length=100)),
                ('payment_type', models.CharField(choices=[('', ''), ('Ипотека', 'Ипотека'), ('Мат.капитал', 'Мат.капитал'), ('Другое', 'Другое')], default='', max_length=100)),
                ('condition', models.CharField(choices=[('Черновая', 'Черновая'), ('Ремонт от застройщика', 'Ремонт от застройщика'), ('В жилом состоянии', 'В жилом состоянии')], default='', max_length=100)),
            ],
            options={
                'db_table': 'filter',
            },
        ),
        migrations.CreateModel(
            name='GalleryAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=admin.utils.get_timestamp_path)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'gallery_announcement',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('phrase', models.BooleanField(default=False)),
                ('highlight', models.BooleanField(default=False)),
                ('highlight_color', models.CharField(choices=[('Розовый', 'Розовый'), ('Зелёный', 'Зелёный')], null=True, verbose_name='Color')),
                ('phrase_content', models.CharField(choices=[('Подарок при покупке', 'Подарок при покупке'), ('Возможен торг', 'Возможен торг'), ('Квартира у моря', 'Квартира у моря'), ('В спальном районе', 'В спальном районе'), ('Вам повезло с ценой!', 'Вам повезло с ценой!'), ('Для большой семьи', 'Для большой семьи'), ('Семейное гнездышко', 'Семейное гнездышко'), ('Отдельная парковка', 'Отдельная парковка')], null=True, verbose_name='Phrase')),
                ('big_advert', models.BooleanField(default=False)),
                ('turbo', models.BooleanField(default=False)),
                ('raise_advert', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField()),
                ('expiration_date', models.DateTimeField(default=datetime.datetime(2023, 10, 12, 22, 56, 55, 90877, tzinfo=datetime.timezone.utc))),
            ],
            options={
                'db_table': 'promotion',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration_date', models.DateTimeField()),
                ('auto_renewal', models.BooleanField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'subscription',
            },
        ),
    ]
